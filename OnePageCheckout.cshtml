@model OnePageCheckoutModel
@using Nop.Web.Models.Checkout
@using Nop.Core.Infrastructure;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";
    ViewBag.Title = T("Checkout").Text;
    var storeLocation = EngineContext.Current.Resolve<Nop.Core.IWebHelper>().GetStoreLocation();
}

@{
    int billingAddressStepNumber = 1;
    int shippingAddressStepNumber = 2;
    int shippingMethodStepNumber = 3;
    int paymentMethodStepNumber = 4;
    if (!Model.ShippingRequired)
    {
        paymentMethodStepNumber = paymentMethodStepNumber - 2;
    }
}

<div class="od-header">
    <div class="header-logo">
        @Html.Action("Logo", "Common")
    </div>
    <div class="header-title">@T("Checkout")</div>
</div>

<div class="checkout_page">
    <div class="ajax-loading-block-window" style="display: none">
    </div>
    @Html.Partial("_Notifications")

    <div class="container" style="padding:0px;">
        <form id="co-form" action="">
            <div class="row">
                <div class="col-md-9 col-sm-8 ">
                    @if (!HttpContext.Current.User.Identity.IsAuthenticated)
                    {
                        <div class="od-responsive-login">
                            <span>Already have an account?</span> <a href="@Url.RouteUrl("login", new {returnurl = Url.RouteUrl("checkout")})" class="od-link">Log in</a>
                        </div>
                    }

                    <div id="opc-billing" class="form_sec">
                        <div class="col-md-4 sec_tiit">
                            <span class="span1">1</span><span class="span2">
                                @T("OD.OnePageCheckout.BillingAddress")
                            </span>
                        </div>
                        <div id="checkout-billing-load" class="col-md-8">
                            <div class="od-login">
                                @if (!HttpContext.Current.User.Identity.IsAuthenticated)
                                {
                                    <span>Already have an account?</span> <a href="@Url.RouteUrl("login", new {returnurl = Url.RouteUrl("checkout")})" class="od-link">Log in</a>
                                }
                            </div>
                            <div class="od-clear"></div>
                            @Html.Action("OpcBillingForm", "OCheckout")
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    @if (Model.ShippingRequired)
                    {
                        <div id="opc-shipping" class="form_sec">
                            <div class="col-md-4 sec_tiit">
                                <span class="span1">2</span><span class="span2">@T("OD.OnePageCheckout.ShippingAddress")</span>
                            </div>
                            <div class="col-md-8">
                                @Html.Action("OpcShippingOptions", "OCheckout")
                                @Html.Action("OpcStoreAddress", "OCheckout")
                                <div id="checkout-shipping-load">
                                    @Html.Action("OpcShippingForm", "OCheckout")
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div id="opc-shipping_method" class="form_sec">
                            <div class="col-md-4 sec_tiit">
                                <span class="span1">3</span><span class="span2">@T("OD.OnePageCheckout.ShippingMethod")</span>
                            </div>
                            <div id="checkout-shipping-method-load" class="col-md-8">
                                @Html.Action("OpcShippingMethodForm", "OCheckout")
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    }
                    <div id="opc-payment_info" class="form_sec" style="border-bottom:0px;">
                        <div class="col-md-4 sec_tiit">
                            <span class="span1">@paymentMethodStepNumber</span><span class="span2">@T("OD.OnePageCheckout.PaymentMethod")</span>
                        </div>
                        <div id="checkout-payment-info-load" class="col-md-8">

                            <div class="od-payment">
                                <i class="fa fa-lock"></i> @T("OD.OnePageCheckout.PaymentMethod.Secure")
                            </div>
                            <div class="od-clear"></div>

                            <div style="border: 1px solid #808080;border-radius: 5px;background-color: #f7f7f7;">
                                @Html.Action("OpcPaymentMethodForm", "OCheckout")
                                <div id="divPaymentForm" class="paymentform">
                                    @*@Html.Action("OpcPaymentInfoForm", "OCheckout", new { paymentmethod = "Payments.PurchaseOrder" })*@
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <!--
                    <div id="opc-comments" name="opc-comments" class="form_sec">
                        <div class="col-md-4 sec_tiit">
                            <span class="span2">@T("OD.OnePageCheckout.Fields.Comments")</span>
                        </div>
                        <div class="col-md-8">
                            <textarea id="txtComments" name="txtComments" class="inn1" rows="4" style="min-height:60px"></textarea>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    -->
                    <div class="clear">&nbsp;</div>
                </div>


                <div class="col-md-3 col-sm-4 side_check">
                    <a href="#" class="pro_check"><i class="fa fa-lock"></i>@T("OD.OnePageCheckout.OrderSubmit")</a>
                    <span class="please-wait" id="confirm-order-please-wait" style="display: none;">@T("Checkout.SubmittingOrder")</span>

                    <div id="load-total-orders">
                        @*@Html.Action("OrderTotals", "ODShoppingCart", new { isCheckout = true })*@
                    </div>
                    <div class="slide_down">
                        <button class="slide_title" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                            @T("ShoppingCart.DiscountCouponCode")
                        </button>
                        <div class="collapse" id="collapseExample">
                            <div class="well od-code">
                                <div class="od-left">
                                    <input id="discountcouponcode" name="discountcouponcode" type="text" class="inn3 form-control" placeholder="Enter Coupon Code">
                                    <span id="message-coupon" class="help-block"></span>
                                </div>
                                <div class="od-right">
                                    <input id="btn-couponcode" type="button" value="Apply" class="od-btn">
                                </div>
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>

                    <div class="slide_down">
                        <button class="slide_title" type="button" data-toggle="collapse" data-target="#collapseExample1" aria-expanded="false" aria-controls="collapseExample">
                            @T("ShoppingCart.GiftCardCouponCode")
                        </button>
                        <div class="collapse" id="collapseExample1">
                            <div class="well od-code">
                                <div class="od-left">
                                    <input id="giftcardcouponcode" name="giftcardcouponcode" type="text" class="inn3 form-control" placeholder="Enter Gift Cards Number">
                                    <span id="message-gift" class="help-block"></span>
                                </div>
                                <div class="od-right">
                                    <input id="btn-gift" type="button" value="Apply" class="od-btn">
                                </div>
                                <div class="clear"></div>
                            </div>
                        </div>
                    </div>

                    <div class="slide_down">
                        <button class="slide_title" type="button" data-toggle="collapse" data-target="#collapseExample2" aria-expanded="false" aria-controls="collapseExample">
                            @T("OD.OnePageCheckout.OrderItems")
                        </button>
                        <div class="collapse" id="collapseExample2">
                            <div class="well">
                                @Html.Action("CartItems", "OCheckout")
                            </div>
                        </div>
                    </div>
                    <div class="safe_secure">
                        @T("OD.OnePageCheckout.SecureStatement")
                    </div>
                    <a href="#" class="pro_check"><i class="fa fa-lock"></i>@T("OD.OnePageCheckout.OrderSubmit")</a>

                    <div class="od-submit-note">By pressing 'Submit My Order' your order will be  complete.<div></div></div>
                </div>
            </div>
        </form>
    </div>


    <div id="notification-box" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header notification-box-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body">
                    <p class="notification-box-subtitle"></p>
                    <p class="notification-box-content"></p>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Styles-->
<link href="~/Plugins/Odegi.OPCheckout/Content/css/font-awesome.css" rel="stylesheet">
<link href="~/Plugins/Odegi.OPCheckout/Content/css/checkout.css" rel="stylesheet">
<link href="~/Plugins/Odegi.OPCheckout/Content/css/bootstrap.min.css" rel="stylesheet">
<link href="~/Plugins/Odegi.OPCheckout/Content/css/bootstrap-select.css" rel="stylesheet">

<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="@Url.Content("~/Plugins/Odegi.OPCheckout/Content/scripts/bootstrap.min.js")"></script>
<script src="@Url.Content("~/Plugins/Odegi.OPCheckout/Content/scripts/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Plugins/Odegi.OPCheckout/Content/scripts/custom.js")"></script>
<script src="@Url.Content("~/Plugins/Odegi.OPCheckout/Content/scripts/jquery.creditCardValidator.js")"></script>

<script type="text/javascript">
    $(function () {
        window.storeLocation = '@(storeLocation)';
        window.isLoggedIn = eval('@HttpContext.Current.User.Identity.IsAuthenticated.ToString().ToLower()');
    });
</script>
<script src="@Url.Content("~/Plugins/Odegi.OPCheckout/Content/scripts/public.odegi.onepagecheckout.js")"></script>
<script type="text/javascript">
    $(function () {
        //Load Payment Method Form
        PaymentMethod.onChange();
    });

    $(".header").hide();
    $(".header-menu").hide();
    OPCUtil.setCardHolderName();
</script>

@{
    var _settingService = Nop.Core.Infrastructure.EngineContext.Current.Resolve<Nop.Services.Configuration.ISettingService>();
    var settings = _settingService.LoadSetting<Odegi.Nop.Plugin.OPCheckout.ODCheckoutSettings>();
    var gkey = settings.GoogleAddressApiKey;
    if (settings.GoogleAddressEnable)
    {
        <script>
        window.onload = function() {

        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = "https://maps.googleapis.com/maps/api/js?libraries=places&key=@gkey";
        script.async = "true";
        script.defer = "defer";
        document.body.appendChild(script);

        setTimeout(initAutocomplete, 2000);

        var lookup = {
            "street_number": document.getElementById('BillingNewAddress_Address1'),
            "route": document.getElementById('BillingNewAddress_Address1'),
            "fullAddress": document.getElementById('BillingNewAddress_Address1'),
            "locality": document.getElementById('BillingNewAddress_City'),
            "neighborhood": document.getElementById('BillingNewAddress_City'),
            "administrative_area_level_1": document.getElementById('BillingNewAddress_StateProvinceId'),
            "country": document.getElementById('BillingNewAddress_CountryId'),
            "postal_code": document.getElementById('BillingNewAddress_ZipPostalCode')
        };

        var lookupShip = {
            "street_number": document.getElementById('ShippingNewAddress_Address1'),
            "route": document.getElementById('ShippingNewAddress_Address1'),
            "fullAddress": document.getElementById('ShippingNewAddress_Address1'),
            "locality": document.getElementById('ShippingNewAddress_City'),
            "neighborhood": document.getElementById('ShippingNewAddress_City'),
            "administrative_area_level_1": document.getElementById('ShippingNewAddress_StateProvinceId'),
            "country": document.getElementById('ShippingNewAddress_CountryId'),
            "postal_code": document.getElementById('ShippingNewAddress_ZipPostalCode')
        };

        var placeSearch;
        var autocomplete;
        var autocompleteShip;
        var componentForm = {
            street_number: 'short_name',
            route: 'long_name',
            locality: 'long_name',
            administrative_area_level_1: 'long_name',
            country: 'long_name',
            neighborhood: 'long_name',
            postal_code: 'short_name'
        };

        function initAutocomplete() {
            document.getElementById('BillingNewAddress_Address1').onFocus = "geolocate()";
            autocomplete = new google.maps.places.Autocomplete((document.getElementById('BillingNewAddress_Address1')), { types: ['geocode'] });
            autocomplete.addListener('place_changed', fillInAddressBill);

            document.getElementById('ShippingNewAddress_Address1').onFocus = "geolocateShip()";
            autocompleteShip = new google.maps.places.Autocomplete((document.getElementById('ShippingNewAddress_Address1')), { types: ['geocode'] });
            autocompleteShip.addListener('place_changed', fillInAddressShip);
        }

        function fillInAddressBill(addressType) {
            var place = autocomplete.getPlace();
            for (var component in componentForm) {
                lookup[component].value = '';
            }
            var fullAddress = '';
            var gState = "";
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                var val = place.address_components[i][componentForm[addressType]];
                if (componentForm[addressType]) {
                    switch (addressType) {
                        case 'street_number':
                            fullAddress = val + fullAddress;
                            break;
                        case 'route':
                            fullAddress = fullAddress + ' ';
                            fullAddress = fullAddress + val;
                            break;
                        case 'neighborhood':
                            lookup.neighborhood.value = val;
                            break;
                        case 'locality':
                            lookup.locality.value = val;
                            break;
                        case 'administrative_area_level_1':
                            //lookup.administrative_area_level_1.value = val;
                            gState = val;
                            setTimeout(function () {
                                var ctrlState = $("#" + "Billing" + "NewAddress_StateProvinceId");
                                var stateId = ctrlState.find("option:contains(" + gState + ")").val();
                                ctrlState.val(stateId).change();
                            }, 300);
                            break;
                        case 'country':
                            //lookup.country.value = val;
			                var ctrlCountry = $("#BillingNewAddress_CountryId");
                            var countryId = ctrlCountry.find("option:contains(" + val + ")").val();
                            ctrlCountry.val(countryId).change();
                            break;
                        case 'postal_code':
                            lookup.postal_code.value = val;
                            break;
                    }
                }
            }
            lookup.fullAddress.value = fullAddress;
        }

        function fillInAddressShip() {
            var place = autocompleteShip.getPlace();
            for (var component in componentForm) {
                lookupShip[component].value = '';
            }
            var fullAddress = '';
            var gState = "";
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                var val = place.address_components[i][componentForm[addressType]];
                if (componentForm[addressType]) {
                    switch (addressType) {
                        case 'street_number':
                            fullAddress = val + fullAddress;
                            break;
                        case 'route':
                            fullAddress = fullAddress + ' ';
                            fullAddress = fullAddress + val;
                            break;
                        case 'neighborhood':
                            lookupShip.neighborhood.value = val;
                            break;
                        case 'locality':
                            lookupShip.locality.value = val;
                            break;
                        case 'administrative_area_level_1':
                            //lookup.administrative_area_level_1.value = val;
                            gState = val;
                            setTimeout(function () {
                                var ctrlState = $("#ShippingNewAddress_StateProvinceId");
                                var stateId = ctrlState.find("option:contains(" + gState + ")").val();
                                ctrlState.val(stateId).change();
                            }, 300);
                            break;
                        case 'country':
                            //lookup.country.value = val;
                            var ctrlCountry = $("#ShippingNewAddress_CountryId");
                            var countryId = ctrlCountry.find("option:contains(" + val + ")").val();
                            ctrlCountry.val(countryId).change();
                            break;
                        case 'postal_code':
                            lookupShip.postal_code.value = val;
                            break;
                    }
                }
            }
            lookupShip.fullAddress.value = fullAddress;
        }

        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }

        function geolocateShip() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocompleteShip.setBounds(circle.getBounds());
                });
            }
        }
    };
        </script>
    }
}
<div id="enableCards" class="od-ecard"></div>